// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"

	v1alpha1 "wiliam.dev/product/grpc/client/promotion/v1alpha1"
)

// PromotionAPIClient is an autogenerated mock type for the PromotionAPIClient type
type PromotionAPIClient struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: ctx, in, opts
func (_m *PromotionAPIClient) CreateUser(ctx context.Context, in *v1alpha1.CreateUserRequestResponse, opts ...grpc.CallOption) (*v1alpha1.CreateUserRequestResponse, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *v1alpha1.CreateUserRequestResponse
	if rf, ok := ret.Get(0).(func(context.Context, *v1alpha1.CreateUserRequestResponse, ...grpc.CallOption) *v1alpha1.CreateUserRequestResponse); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.CreateUserRequestResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1alpha1.CreateUserRequestResponse, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RetrievePromotion provides a mock function with given fields: ctx, in, opts
func (_m *PromotionAPIClient) RetrievePromotion(ctx context.Context, in *v1alpha1.RetrievePromotionRequest, opts ...grpc.CallOption) (*v1alpha1.RetrievePromotionResponse, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *v1alpha1.RetrievePromotionResponse
	if rf, ok := ret.Get(0).(func(context.Context, *v1alpha1.RetrievePromotionRequest, ...grpc.CallOption) *v1alpha1.RetrievePromotionResponse); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.RetrievePromotionResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1alpha1.RetrievePromotionRequest, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
